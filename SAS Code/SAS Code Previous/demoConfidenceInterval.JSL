/*

demoConfidenceInterval.jsl
08jun2001

Purpose
This demonstration shows confidence intervals for each of 100 samples
from a normal population with a specified mean and standard deviation.
The variation in the point and interval estimates is evident.
The percentage of intervals that include the population mean is also shown.

Author
Lee Creighton (SAS Institute) (original)
Mark Bailey (SAS Institute) (modified)

Contact
Lee.Creighton@sas.com
mark.bailey@sas.com

Usage
Simply run this script by any one of these approaches:

	Select Edit > Run Script
	Press control-R
	Click the Run Script button on the tool bar

You can modify the population parameters, the sample size, and the confidence level.
You can obtain another set of 100 samples at any time.

Future Improvement Ideas
None at this time.

*/

Clear Globals();

parms = Dialog(
	V List(
		"Enter sampling parameters",
		" ",
		Line Up( 2,
			"Population Mean",	mu = Edit Number(0),
			"Population SD",	sigma = Edit Number(1),
			"Sample Size",		sampSize = Edit Number(10),
			"Number of Samples",	nSamples = Edit Number(100),
			"Confidence",		ci = Edit Number(0.95)
		), // line up
		usePopSD = Check Box( "Use population standard deviation", 0 ),
		" ",
		H List(
			Button("OK"),
			Button("Cancel")
		)
	) // v list
); // dialog

If( parms["Button"] == -1, Throw( "User cancelled script" ) );

Remove From( parms ); Eval List( parms );

resample = 1;	// flag to signal when to obtain new samples.
moveLabel = 1;	// flag to signal when to reposition label.
showIt = Expr(
	moveLabel = 1;
	g << Reshow;
	g[Axis Box(1)] << {
		Min( mu - 6*sigma / Sqrt( sampSize ) ),
		Max( mu + 6*sigma / Sqrt( sampSize ) )
	}
);

New Window( "Confidence Intervals",
		H List Box(
			Outline Box( "Intervals Plot",
				g = Graph Box(
					Frame Size( 500, 200 ),
					X Scale( -1, nSamples+1 ),
					Y Scale( mu - 6*sigma / Sqrt( sampSize ), mu + 6*sigma / Sqrt( sampSize ) ),
					Double Buffer, 
					H Line( mu );
					hits = 0;
					If( resample, x = J( nSamples, sampSize, 0 ) );
					For( i=1, i<=nSamples, i++,		// for each sample
						If( resample,
							For( j=1, j<=sampSize, j++,	// for each point in the sample
								x[i,j] = mu + sigma * Random Normal()
							);
						);
						m = Mean( x[i,0] );
						If( usePopSD,
							sd = sigma / Sqrt( sampSize ),
							sd = Std Dev( x[i,0] ) / Sqrt( sampSize )
						);
						t = t Quantile( 1-((1-ci)/2), sampSize);
						z = Normal Quantile(1-((1-ci)/2)); 
						If ( usePopSD,
							lb = m-z*sd; ub = m+z*sd,
							lb = m-t*sd; ub = m+t*sd;
						);
						If ( lb < mu < ub,
							Pen Color(1); hits++,
							Pen Color(3)
						); 
						Line( {i,lb}, {i,ub} );
						Marker( 2, {i,m} ); 
					); // for i, each sample
					If( moveLabel,
						labelHt = mu + 5*sigma/Sqrt( sampSize );
						moveLabel = 0 );
					Text(
						Center Justified,
						{50,labelHt},
						Char( 100*hits/nSamples ) || "% include population mean"
					);
					resample = 0; // turn off resampling in general
				) // graph
			), // outline
			Outline Box( "Sampling Parameters",
				V List Box(
					Global Box(
						usePopSD,
						"Use Population SD (1 for yes, 0 for no)"
					),
					Slider Box( -5, 5, mu,
						mu = Round( mu, 2 );
						g << Reshow
					),
					Global Box(
						mu,
						"Population Mean"
					),
					Slider Box( 0, 5, sigma,
						sigma = Round( sigma, 2 );
						g << Reshow
					),
					Global Box(
						sigma,
						"Population Std Dev"
					),
					Slider Box( 1, 50, sampSize,
						sampSize = Round( sampSize, 0 );
						g << Reshow
					),
					Global Box(
						sampSize,
						"Sample Size"
					),
					Slider Box( 0, 1, ci,
						ci = Round( ci, 2 );
						g << Reshow
					),
					Global Box(
						ci,
						"Confidence Interval"
					),
					Text Box( "" ),
					Button Box( "New Sample",
						resample = 1;
						showIt
					)
				) // v list
			) // outline
		) // h list
); // new window

/*
Revision History (date, change, person)
date unknown, created, Lee Creighton
08jun2001, isolated re-sampling routine so only on demand, Mark Bailey
*/